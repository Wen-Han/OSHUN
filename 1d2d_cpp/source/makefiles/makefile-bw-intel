#!/bin/sh
######################################################
#### BLUE WATERS MAKEFILE
#### -- Archis Joglekar
#### Uses intel compiler and CUDA libraries
######################################################
COMPILER = CC

OPTFLAGS1 = -use-intel-optimized-headers
OPTFLAGSt = -O2 -no-vec
OPTFLAGS2 = -use-intel-optimized-headers
DBGFLAGS = -v -O0 -Wall -Wuninitialized -Wextra -Wpedantic

# HDF5 libraries
H5LIB = -lhdf5_hl -lhdf5
LDFLAGS = -L/opt/nvidia/cudatoolkit7.5/7.5.18-1.0502.10743.2.1/lib64 -L/opt/cray/hdf5-parallel/1.10.0.1/intel/150/lib -L${INTEL_PATH}/linux/ipp/lib/intel64
CPPFLAGS = -fopenmp -DOSHUN_VERSION=\"$(GIT_VERSION)\" -Dn_GPU=1 -std=c++11
INCLUDE_DIRS = -I/opt/cray/hdf5-parallel/1.10.0.1/intel/150/include -I${INTEL_PATH}/linux/ipp/lib/intel64/linux/ipp/include -I${INTEL_PATH}/linux/ipp/lib/intel64/linux/compiler/perf_headers/c++
IPPLIB = -lippi -lipps -lippvm -lippcore 
CUDALIB = -lcudart -lcusparse

EXEC_DIR = ../bin
TMP_DIR = ../bin/tmp

OBJECTS = input.o clock.o state.o stepper.o gpu.o formulary.o parser.o setup.o vlasov.o nmethods.o functors.o collisions.o fluid.o implicitE.o parallel.o export.o main.o

EXEC = oshun.e

GIT_VERSION := $(shell git describe --abbrev=4 --dirty --always --tags)

BUILDOBJECTS = ${addprefix ${TMP_DIR}/,${OBJECTS}}

BUILDEXEC = ${addprefix ${EXEC_DIR}/,${EXEC}}

${BUILDEXEC} : ${BUILDOBJECTS}
	-${COMPILER} ${CPPFLAGS} ${OPTFLAGS2} ${INCLUDE_DIRS} ${LDFLAGS} $(H5LIB) $(IPPLIB) $(CUDALIB) -o ${BUILDEXEC}  \
	${BUILDOBJECTS} 

clean ::
	rm -f ${BUILDOBJECTS}
	rm -f ${BUILDEXEC}
	rm -f ${TMP_DIR}/${BUILDOBJECTS}

debug :
	${COMPILER} ${OPTFLAGS1} -o ${BUILDEXEC} \
	%.cpp

${TMP_DIR}/parser.o: parser.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<		

${TMP_DIR}/input.o: input.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/stepper.o: stepper.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/clock.o: clock.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/state.o: state.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<	

${TMP_DIR}/formulary.o: formulary.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<	

${TMP_DIR}/setup.o: setup.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<	

${TMP_DIR}/vlasov.o: vlasov.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<	

${TMP_DIR}/nmethods.o: nmethods.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS2) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/functors.o: functors.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/collisions.o: collisions.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/fluid.o: fluid.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/implicitE.o: implicitE.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/parallel.o: parallel.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/export.o: export.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<

${TMP_DIR}/main.o: main.cpp
	$(COMPILER) ${CPPFLAGS} $(OPTFLAGS1) $(INCLUDE_DIRS) -c -o $@ $<		
	#